framework:
  cache:
    # Default cache adapter
    app: cache.adapter.redis

    # Default Redis provider
    default_redis_provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%'

    # Default lifetime for cache items
    default_lifetime: 3600

    # Cache pools configuration
    pools:
      # Main application cache
      cache.app:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/1'
        default_lifetime: 3600
        tags: true

      # Doctrine query cache
      doctrine.query_cache:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/2'
        default_lifetime: 7200

      # Doctrine result cache
      doctrine.result_cache:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/3'
        default_lifetime: 3600

      # Doctrine metadata cache
      doctrine.metadata_cache:
        adapter: cache.adapter.apcu
        default_lifetime: 0

      # Session cache
      cache.session:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/4'
        default_lifetime: '%env(int:SESSION_LIFETIME)%'

      # Security cache (login attempts, etc.)
      cache.security:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/5'
        default_lifetime: 86400

      # Rate limiter cache
      cache.rate_limiter:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/6'
        default_lifetime: 3600

      # Telegram bot cache
      cache.telegram:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/7'
        default_lifetime: 300
        tags: true

      # Blockchain data cache
      cache.blockchain:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/8'
        default_lifetime: 60

      # User data cache
      cache.user_data:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/9'
        default_lifetime: 1800
        tags: true

      # Translation cache
      cache.translations:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/10'
        default_lifetime: 86400

      # Validation cache
      cache.validator:
        adapter: cache.adapter.apcu
        default_lifetime: 3600

      # Serializer cache
      cache.serializer:
        adapter: cache.adapter.apcu
        default_lifetime: 0

      # Annotations cache
      cache.annotations:
        adapter: cache.adapter.apcu
        default_lifetime: 0

      # Property info cache
      cache.property_info:
        adapter: cache.adapter.apcu
        default_lifetime: 0

      # Messenger cache
      cache.messenger.restart_workers_signal:
        adapter: cache.adapter.redis
        provider: 'redis://:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(int:REDIS_PORT)%/11'

# Services for cache warming and clearing
services:
  # Cache warmer for critical data
  App\CacheWarmer\CriticalDataWarmer:
    arguments:
      - '@cache.app'
      - '@App\Repository\SystemSettingsRepository'
    tags:
      - { name: kernel.cache_warmer, priority: 100 }

  # Cache clearer for user-specific data
  App\Cache\UserCacheClearer:
    arguments:
      - '@cache.user_data'
    tags:
      - { name: kernel.cache_clearer }

  # Cache manager service
  App\Service\Cache\CacheManager:
    arguments:
      - '@cache.app'
      - '@cache.user_data'
      - '@cache.blockchain'
      - '@cache.telegram'
      - '@logger'

when@dev:
  framework:
    cache:
      app: cache.adapter.filesystem
      pools:
        cache.app:
          adapter: cache.adapter.filesystem
        doctrine.query_cache:
          adapter: cache.adapter.array
        doctrine.result_cache:
          adapter: cache.adapter.array

when@test:
  framework:
    cache:
      app: cache.adapter.array
      pools:
        cache.app:
          adapter: cache.adapter.array
        cache.security:
          adapter: cache.adapter.array
        cache.rate_limiter:
          adapter: cache.adapter.array

when@prod:
  framework:
    cache:
      # Use tagged cache in production for better invalidation
      pools:
        cache.app:
          tags: true
          reset: 'on_message'
        cache.user_data:
          tags: true
          marshaller: 'cache.default_marshaller'