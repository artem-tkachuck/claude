# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app.encryption_key: '%env(base64:APP_ENCRYPTION_KEY)%'
  app.tron_api_key: '%env(TRON_API_KEY)%'
  app.hot_wallet_address: '%env(HOT_WALLET_ADDRESS)%'
  app.cold_wallet_address: '%env(COLD_WALLET_ADDRESS)%'
  app.cold_wallet_threshold: '%env(float:COLD_WALLET_THRESHOLD)%'
  app.deposit_confirmation_blocks: '%env(int:DEPOSIT_CONFIRMATION_BLOCKS)%'

  # Bonus configuration
  app.bonus_config:
    distribution_percentage: '%env(float:BONUS_DISTRIBUTION_PERCENTAGE)%'
    company_percentage: '%env(float:COMPANY_PERCENTAGE)%'
    distribution_time: '%env(BONUS_DISTRIBUTION_TIME)%'

  # Referral configuration
  app.referral_config:
    enabled: '%env(bool:REFERRAL_ENABLED)%'
    require_deposit: '%env(bool:REFERRAL_REQUIRE_DEPOSIT)%'
    max_levels: '%env(int:REFERRAL_MAX_LEVELS)%'
    level_1: '%env(float:REFERRAL_LEVEL_1_PERCENTAGE)%'
    level_2: '%env(float:REFERRAL_LEVEL_2_PERCENTAGE)%'

  # Withdrawal configuration
  app.withdrawal_config:
    auto_approve_limit: '%env(float:AUTO_APPROVE_LIMIT)%'
    daily_limit: '%env(float:WITHDRAWAL_DAILY_LIMIT)%'
    min_amount: '%env(float:WITHDRAWAL_MIN_AMOUNT)%'
    fee_percentage: '%env(float:WITHDRAWAL_FEE_PERCENTAGE)%'
    required_approvals: '%env(int:WITHDRAWAL_REQUIRED_APPROVALS)%'

  # Security configuration
  app.security_config:
    max_login_attempts: '%env(int:MAX_LOGIN_ATTEMPTS)%'
    lockout_duration: '%env(int:LOCKOUT_DURATION)%'
    require_2fa_for_admins: '%env(bool:REQUIRE_2FA_FOR_ADMINS)%'
    require_2fa_for_withdrawals: '%env(bool:REQUIRE_2FA_FOR_WITHDRAWALS)%'
    allowed_countries: '%env(json:ALLOWED_COUNTRIES)%'
    blocked_countries: '%env(json:BLOCKED_COUNTRIES)%'
    session_lifetime: '%env(int:SESSION_LIFETIME)%'

  # Telegram configuration
  app.telegram_config:
    bot_token: '%env(TELEGRAM_BOT_TOKEN)%'
    bot_username: '%env(TELEGRAM_BOT_USERNAME)%'
    webhook_secret: '%env(TELEGRAM_WEBHOOK_SECRET)%'
    admin_chat_id: '%env(TELEGRAM_ADMIN_CHAT_ID)%'

  # System configuration
  app.system_config:
    maintenance_mode: '%env(bool:MAINTENANCE_MODE)%'
    debug_mode: '%env(bool:APP_DEBUG)%'
    timezone: '%env(TIMEZONE)%'
    default_locale: '%env(DEFAULT_LOCALE)%'
    supported_locales: [ 'en', 'uk', 'ru' ]

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $projectDir: '%kernel.project_dir%'
      $environment: '%kernel.environment%'
      $debug: '%kernel.debug%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # Security services
  App\Service\Security\EncryptionService:
    arguments:
      $params: '@parameter_bag'

  App\Security\TelegramAuthenticator:
    arguments:
      $appSecret: '%env(APP_SECRET)%'

  # Blockchain services
  App\Service\Blockchain\TronService:
    arguments:
      $tronApiKey: '%app.tron_api_key%'
      $hotWalletAddress: '%app.hot_wallet_address%'
      $coldWalletAddress: '%app.cold_wallet_address%'
      $coldWalletThreshold: '%app.cold_wallet_threshold%'
      $requiredConfirmations: '%app.deposit_confirmation_blocks%'

  # Telegram services
  App\Service\Telegram\TelegramBotService:
    arguments:
      $botToken: '%app.telegram_config.bot_token%'
      $botUsername: '%app.telegram_config.bot_username%'
      $commandHandlers: !tagged_iterator telegram.command_handler

  # Bonus services
  App\Service\Bonus\BonusCalculator:
    arguments:
      $bonusConfig: '%app.bonus_config%'

  App\Service\Bonus\ReferralBonusService:
    arguments:
      $referralConfig: '%app.referral_config%'

  # Notification services
  App\Service\Notification\NotificationService:
    arguments:
      $telegramConfig: '%app.telegram_config%'

  # Command handlers - auto-tag all command handlers
  App\Service\Telegram\CommandHandler\:
    resource: '../src/Service/Telegram/CommandHandler/'
    tags: [ 'telegram.command_handler' ]

  # Event subscribers
  App\EventSubscriber\SecurityEventSubscriber:
    arguments:
      $securityConfig: '%app.security_config%'
    tags:
      - { name: kernel.event_subscriber }

  App\EventSubscriber\AuditLogSubscriber:
    tags:
      - { name: doctrine.event_subscriber }

  App\EventSubscriber\TransactionSubscriber:
    tags:
      - { name: doctrine.event_subscriber }

  # Message handlers
  App\MessageHandler\:
    resource: '../src/MessageHandler/'
    tags: [ 'messenger.message_handler' ]

  # Validators
  App\Validator\CryptoAddressValidator:
    tags:
      - { name: validator.constraint_validator }

  # Console commands
  App\Command\:
    resource: '../src/Command/'
    tags: [ 'console.command' ]

  # Controllers
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]

  # Admin controllers with specific security
  App\Controller\Admin\:
    resource: '../src/Controller/Admin/'
    tags: [ 'controller.service_arguments' ]
    calls:
      - [ setSecurityConfig, [ '%app.security_config%' ] ]

  # Repository services
  App\Repository\:
    resource: '../src/Repository/'
    tags: [ 'doctrine.repository_service' ]

  # Twig extensions
  App\Twig\:
    resource: '../src/Twig/'
    tags: [ 'twig.extension' ]

  # Rate limiter for API
  app.rate_limiter.api:
    parent: 'limiter'
    arguments:
      $id: 'api'
      $config:
        policy: 'sliding_window'
        limit: 100
        interval: '1 minute'

  # Rate limiter for authentication
  app.rate_limiter.auth:
    parent: 'limiter'
    arguments:
      $id: 'auth'
      $config:
        policy: 'fixed_window'
        limit: 5
        interval: '15 minutes'

  # Cache services
  app.cache.blockchain:
    parent: 'cache.app'
    tags:
      - { name: 'cache.pool', namespace: 'blockchain' }

  app.cache.user_data:
    parent: 'cache.app'
    tags:
      - { name: 'cache.pool', namespace: 'user_data' }

  # Lock factory for preventing concurrent operations
  app.lock.factory:
    class: Symfony\Component\Lock\LockFactory
    arguments:
      - '@lock.default.store'

  # Specific service configurations
  GuzzleHttp\Client:
    arguments:
      - timeout: 30
        verify: true
        headers:
          User-Agent: 'CryptoInvestmentPlatform/1.0'

  # Redis connection for custom usage
  Redis:
    class: Redis
    calls:
      - [ connect, [ '%env(REDIS_HOST)%', '%env(int:REDIS_PORT)%' ] ]
      - [ auth, [ '%env(REDIS_PASSWORD)%' ] ]

  # Monitoring services
  App\Service\Monitoring\HealthCheckService:
    arguments:
      $checks: !tagged_iterator app.health_check

  App\Service\Monitoring\MetricsCollector:
    tags:
      - { name: 'controller.service_arguments' }

  # Anti-fraud service
  App\Service\Security\AntiFraudService:
    arguments:
      $rules: '%app.antifraud_rules%'
      $cache: '@app.cache.user_data'

  # Backup service
  App\Service\System\BackupService:
    arguments:
      $backupPath: '%kernel.project_dir%/var/backups'
      $s3Config: '%env(json:S3_BACKUP_CONFIG)%'

  # Email service configuration
  App\Service\Notification\EmailNotifier:
    arguments:
      $mailer: '@mailer'
      $defaultFrom: '%env(MAILER_FROM)%'

  # Webhook processor
  App\Service\Webhook\WebhookProcessor:
    arguments:
      $handlers: !tagged_iterator app.webhook_handler

  # Geo-blocking service
  App\Service\Security\GeoBlockingService:
    arguments:
      $allowedCountries: '%app.security_config.allowed_countries%'
      $blockedCountries: '%app.security_config.blocked_countries%'
      $geoIpDatabase: '%kernel.project_dir%/var/geoip/GeoLite2-Country.mmdb'